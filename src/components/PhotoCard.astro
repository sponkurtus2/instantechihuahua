---
import type { ImageMetadata } from 'astro:assets';
import { getImage } from 'astro:assets';

interface Props {
  title: string;
  image: ImageMetadata | string;
  index: number;
}

const { title, image, index } = Astro.props;

// Si la imagen es un objeto de ImageMetadata (importación local), optimízala
let optimizedImage;
let imageSrc;

if (typeof image === 'string') {
  // Para imágenes en public/ o URLs remotas
  imageSrc = image;
} else {
  // Para imágenes importadas localmente
  optimizedImage = await getImage({
    src: image,
    widths: [300, 600, 900],
    formats: ['webp', 'jpeg'],
  });
  imageSrc = optimizedImage.src;
}
---

<article class="photo-card">
  <div class="image-container">
    {typeof image === 'string' ? (
      <img 
        src={imageSrc}
        alt={title}
        loading={index < 3 ? 'eager' : 'lazy'}
        class="photo-image"
      />
    ) : (
      <img 
        {...optimizedImage}
        alt={title}
        loading={index < 3 ? 'eager' : 'lazy'}
        class="photo-image"
      />
    )}
  </div>
</article>

<style>
  .photo-card {
    background: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .photo-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }
  
  .image-container {
    overflow: hidden;
    height: 250px;
  }
  
  .photo-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }
  
  .photo-card:hover .photo-image {
    transform: scale(1.05);
  }
</style>
